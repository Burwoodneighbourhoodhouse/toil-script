<!DOCTYPE html>
<html>
<head>
  <title>TOIL Tracker</title>
</head>

  <h1>TOIL Tracker</h1>

  <div style="background: white; padding: 10px; margin-bottom: 15px;">
    <h3>TOIL Balance</h3>
    <p id="balance">Loading...</p>
  </div>

  <div style="background: white; padding: 10px; margin-bottom: 15px;">
    <h3>Add Hours</h3>
    <form id="addForm">
      <label>Date:</label><br>
      <input type="date" id="toilDate"><br><br>
      <label>Hours Earned:</label><br>
      <input type="number" id="toilHours" step="0.01"><br><br>
      <button type="submit">Add</button>
    </form>
  </div>

  <div style="background: white; padding: 10px; margin-bottom: 15px;">
    <h3>Use Hours for Day Off</h3>
    <form id="applyForm">
      <label>Day Off Date:</label><br>
      <input type="date" id="dayOffDate"><br><br> <!-- ✅ NEW INPUT -->
      <label>Hours to Use:</label><br>
      <input type="number" id="applyHours" step="0.01"><br><br>
      <button type="submit">Apply</button>
    </form>
  </div>

  <div style="background: white; padding: 10px;">
    <h3>TOIL Entries</h3>
    <button onclick="app.showEntries()">Show All</button>
    <pre id="entries"></pre>
  </div>

  <script>
    class Entry {
      constructor(date, hours) {
        this.date = date;
        this.hours = hours;
      }

      toString() {
        return this.date + "|" + this.hours;
      }

      static fromString(str) {
        let parts = str.split("|");
        return new Entry(parts[0], parseFloat(parts[1]));
      }
    }

    class TOILApp {
      constructor() {
        this.entries = [];
        this.total = 0;
        this.load();
        this.updateBalance();
      }

      load() {
        let data = localStorage.getItem("toil");
        if (data) {
          let lines = data.split("\n");
          this.total = parseFloat(lines[0]);
          for (let i = 1; i < lines.length; i++) {
            this.entries.push(Entry.fromString(lines[i]));
          }
        }
      }

      save() {
        let lines = [this.total.toString()];
        for (let entry of this.entries) {
          lines.push(entry.toString());
        }
        localStorage.setItem("toil", lines.join("\n"));
      }

      updateBalance() {
        document.getElementById("balance").textContent = this.total.toFixed(2) + " hours";
      }

      add(date, hours) {
        this.entries.push(new Entry(date, hours));
        this.total += hours;
        this.save();
        this.updateBalance();
        alert("Hours added.");
      }

      apply(hours, dayOffDate) {
        if (hours > this.total) {
          alert("Not enough TOIL hours.");
        } else {
          this.entries.push(new Entry(dayOffDate, -hours)); // ✅ Use chosen date
          this.total -= hours;
          this.save();
          this.updateBalance();
          alert("Day off applied for " + dayOffDate + ".");
        }
      }

      showEntries() {
        let area = document.getElementById("entries");
        if (this.entries.length === 0) {
          area.textContent = "No entries.";
        } else {
          area.textContent = this.entries.map(e => e.date + ": " + e.hours + " hrs").join("\n");
        }
      }
    }

    let app = new TOILApp();

    document.getElementById("addForm").addEventListener("submit", function(e) {
      e.preventDefault();
      let date = document.getElementById("toilDate").value;
      let hours = parseFloat(document.getElementById("toilHours").value);
      if (!date || isNaN(hours) || hours <= 0) {
        alert("Please enter valid data.");
        return;
      }
      app.add(date, hours);
      this.reset();
    });

    document.getElementById("applyForm").addEventListener("submit", function(e) {
      e.preventDefault();
      let date = document.getElementById("dayOffDate").value;
      let hours = parseFloat(document.getElementById("applyHours").value);
      if (!date || isNaN(hours) || hours <= 0) {
        alert("Please enter valid data.");
        return;
      }
      app.apply(hours, date); // ✅ Pass date to apply()
      this.reset();
    });
  </script>

</body>
</html>
